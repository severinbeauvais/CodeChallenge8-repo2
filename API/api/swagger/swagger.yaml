swagger: "2.0"
info:
  version: "1.0.0"
  title: SEISM API
host: localhost:3000
basePath: /api
tags:
- name: "login"
  description: "Everything about Logging In"
  externalDocs:
    description: "Find out more"
    url: "https://github.com/BCDevExchange-CodeChallenge/CodeChallenge8-repo2.git"
- name: "user"
  description: "Operations about Users"
  externalDocs:
    description: "Find out more about our API"
    url: "https://github.com/BCDevExchange-CodeChallenge/CodeChallenge8-repo2.git"
- name: "species"
  description: "Operations about Species"
  externalDocs:
    description: "Find out more about our API"
    url: "https://github.com/BCDevExchange-CodeChallenge/CodeChallenge8-repo2.git"
schemes:
  - http
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
     For accessing the API a valid JWT token must be passed in all the queries in
     the 'Authorization' header.

     A valid JWT token is generated by the API and returned.

       The following syntax must be used in the 'Authorization' header :

         Bearer xxxxxx.yyyyyyy.zzzzzz

consumes:
  - application/json
produces:
  - application/json

###
### Resource Definitions
###
definitions:
  Authentication:
    type: object
    properties:
      seism_username:
        type: string
        example: "seism_username"
      password:
        type: string
        example: "password"
  Token:
    type: object
    properties:
      token:
        type: string
  Error:
    type: object
    properties:
      message:
        type: string

### User Definitions
  UserObject:
    type: object
    properties:
      _id:
        type: string
        example: "54759eb3c090d83494e2d804"
        ## TODO: Add more fields here.
  UserFields:
    type: string
    description: "Optional fields to return"
    example: firstName|lastName
    enum: &userFields
      - username
      - firstName
      - lastName
      - email

### Species Definitions
  SpeciesObject:
    type: object
    properties:
      _id:
        type: string
        example: "54759eb3c090d83494e2d804"
        ## FUTURE: add more fields here
  SpeciesFields:
    type: string
    description: "Optional fields to return"
    example: commonName|latinName
    enum: &speciesFields
      - commonName
      - latinName
      - category
      - dateIntroBC
      - description
      - image

###
### Path Definitions
###
paths:

### Login Routes
  /login/token:
    x-swagger-router-controller: login
    options:
      tags:
        - login
      operationId: loginOptions
      summary: "Pre-flight request"
      description: "Options for Login"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Token"
    post:
      tags:
        - login
      operationId: loginPost
      summary: "Get a Bearer token"
      description: "Get a JWT in order to access protected routes"
      parameters:
        - name: authentication
          in: body
          required: true
          schema:
            $ref: "#/definitions/Authentication"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Token"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
### User Routes

  /user:
    x-swagger-router-controller: user
    options:
      tags:
        - user
      operationId: protectedOptions
      summary: "Pre-flight request"
      description: "Options on User Route"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/UserObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    head:
      tags:
        - user
      operationId: protectedHead
      summary: "Retrieve META associated with user entries"
      description: "Get META from the request, without returning the payload in question"
      security:
        - Bearer: []
      x-security-scopes:
        - seism_admin
        - seism_user
      parameters:
        - in: query
          name: isDeleted
          type: boolean
          required: false
          description: "Whether or not to return deleted user entries"
        - in: query
          collectionFormat: multi
          name: category
          type: string
          required: false
          description: "Get user entries that match this category(ies)"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/UserObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
        - user
      operationId: protectedPut
      summary: "Update a user entry"
      description: "Update a user object"
      security:
        - Bearer: []
      x-security-scopes:
        - seism_admin
        - write:user
      parameters:
        - name: userObject
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserObject"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/UserObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"

### Species Routes
  /species:
    x-swagger-router-controller: species
    options:
      tags:
        - species
      operationId: protectedOptions
      summary: "Pre-flight request"
      description: "Options on Species Route"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SpeciesObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
        - species
      operationId: protectedPost
      summary: "Create a new species"
      description: "Create a new species object"
      security:
        - Bearer: []
      x-security-scopes:
        - seism_admin
        - write:application
      parameters:
        - name: species
          in: body
          required: true
          schema:
            type: object
            properties:
              _id:
                type: string
                example: "54759eb3c090d83494e2d804"
                ## FUTURE: add more fields here
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SpeciesObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    head:
      tags:
        - species
      operationId: protectedHead
      summary: "Retrieve META associated with species entries"
      description: "Get META from the request, without returning the payload in question"
      security:
        - Bearer: []
      x-security-scopes:
        - seism_admin
        - seism_user
      parameters:
        - in: query
          name: isDeleted
          type: boolean
          required: false
          description: "Whether or not to return deleted species entries"
        - in: query
          collectionFormat: multi
          name: category
          type: string
          required: false
          description: "Get species entries that match this category(ies)"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SpeciesObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - species
      operationId: protectedGet
      summary: "Get a list of species entries"
      description: "Authenticated access to retrieving species"
      security:
        - Bearer: []
      x-security-scopes:
        - seism_admin
        - seism_user
      parameters:
        - in: query
          name: fields
          description: "Species fields to return"
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *speciesFields
        - in: query
          name: isDeleted
          type: boolean
          required: false
          description: "Species that are deleted or not"
        - in: query
          name: pageNum
          type: number
          required: false
          description: "Page number (100 results each)"
        - in: query
          name: pageSize
          type: number
          required: false
          description: "Number of results per page (if 'pageNum' is specified)"
        - in: query
          collectionFormat: multi
          name: category
          type: string
          required: false
          description: "Get species entries that match this category(ies)"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SpeciesObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /species/{speciesId}:
    x-swagger-router-controller: species
    options:
      tags:
        - species
      operationId: protectedOptions
      summary: "Pre-flight request"
      description: "Options on Species GET Route"
      parameters:
        - name: speciesId
          in: path
          description: "ID of species entry to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SpeciesObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    head:
      tags:
        - species
      operationId: protectedHead
      summary: "Retrieve META associated with a species entry"
      description: "Get META from the request, without returning the payload in question"
      security:
        - Bearer: []
      x-security-scopes:
        - seism_admin
        - seism_user
      parameters:
        - name: speciesId
          in: path
          description: "ID of species entry to get"
          required: true
          type: "string"
        - in: query
          name: isDeleted
          type: boolean
          required: false
          description: "Whether or not to return deleted species entry"
        - in: query
          collectionFormat: multi
          name: category
          type: string
          required: false
          description: "Get a species entry that matches this category(ies)"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SpeciesObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - species
      operationId: protectedGet
      summary: "Get a species entry"
      description: "Authenticated access to retrieve a species object"
      security:
        - Bearer: []
      x-security-scopes:
        - seism_admin
        - seism_user
      parameters:
        - name: speciesId
          in: path
          description: "ID of species object to get"
          required: true
          type: "string"
        - in: query
          name: fields
          description: "Species fields to return"
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *speciesFields
        - in: query
          name: isDeleted
          type: boolean
          required: false
          description: "Whether or not to return deleted species entry"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SpeciesObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
        - species
      operationId: protectedPut
      summary: "Update a species entry"
      description: "Update a species object"
      security:
        - Bearer: []
      x-security-scopes:
        - seism_admin
        - write:application
      parameters:
        - name: speciesId
          in: path
          description: "ID of species object to update"
          required: true
          type: "string"
        - name: speciesObject
          in: body
          required: true
          schema:
            $ref: "#/definitions/SpeciesObject"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SpeciesObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
        - species
      operationId: protectedDelete
      summary: "Delete a species entry"
      description: "Delete a species object"
      security:
        - Bearer: []
      x-security-scopes:
        - seism_admin
      parameters:
        - name: speciesId
          in: path
          description: "ID of species object to delete"
          required: true
          type: "string"
        - name: speciesObject
          in: body
          required: true
          schema:
            $ref: "#/definitions/SpeciesObject"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SpeciesObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
